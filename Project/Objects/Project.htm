<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Mar 02 09:57:25 2023
<BR><P>
<H3>Maximum Stack Usage =        212 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SHT3X_GetTempAndHumi &rArr; SHT3X_GetTempAndHumiPolling &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[a]">EXTI0_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[7]">EXTI11_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[b]">EXTI1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[c]">EXTI2_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[d]">EXTI3_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[e]">EXTI4_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[f]">EXTI5_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[16]">EXTI6_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[17]">EXTI7_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from hk32f030m_it.o(i.HardFault_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from hk32f030m_it.o(i.NMI_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from hk32f030m_it.o(i.PendSV_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from hk32f030m_it.o(i.SVC_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from hk32f030m_it.o(i.SysTick_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1c]">SystemInit</a> from system_hk32f030m.o(i.SystemInit) referenced from keil_startup_hk32f030m.o(.text)
 <LI><a href="#[10]">TIM1_BRK_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[12]">TIM1_UP_TRG_COM_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[15]">TIM6_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1a]">USART1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from keil_startup_hk32f030m.o(.text)
 <LI><a href="#[1e]">fputc</a> from bsp_usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[1b]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[76]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[77]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[78]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[79]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[7a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[21]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawTemperature
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[24]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawTemperature
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawHumidity
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcHumidity
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawTemperature
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawHumidity
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcHumidity
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcHumidity
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawTemperature
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawHumidity
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteAlertLimitData
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteAlertLimitData
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[22]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7f]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[80]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[81]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>DelayMicroSeconds</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sht3x.o(i.DelayMicroSeconds))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StopCondition
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StartCondition
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SoftReset
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_HardReset
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>GPIO_Init</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, hk32f030m_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_OUT
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_IN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
</UL>

<P><STRONG><a name="[68]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, hk32f030m_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[65]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32f030m_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_READ
</UL>

<P><STRONG><a name="[38]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32f030m_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StopCondition
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StartCondition
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_HardReset
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32f030m_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StopCondition
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StartCondition
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_HardReset
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32f030m_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2c_ReadByte</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, sht3x.o(i.I2c_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_READ
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_OUT
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_IN
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
</UL>

<P><STRONG><a name="[3d]"></a>I2c_StartCondition</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sht3x.o(i.I2c_StartCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2c_StartCondition &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_OUT
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
</UL>

<P><STRONG><a name="[3e]"></a>I2c_StopCondition</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sht3x.o(i.I2c_StopCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2c_StopCondition &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_OUT
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
</UL>

<P><STRONG><a name="[3f]"></a>I2c_WriteByte</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, sht3x.o(i.I2c_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_READ
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_OUT
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_IN
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Write2BytesAndCrc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hk32f030m_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
</UL>

<P><STRONG><a name="[67]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hk32f030m_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[40]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, hk32f030m_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[4a]"></a>SHT3X_ClearAllAlertFlags</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sht3x.o(i.SHT3X_ClearAllAlertFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SHT3X_ClearAllAlertFlags &rArr; SHT3X_WriteCommand &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>SHT3X_GetTempAndHumi</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, sht3x.o(i.SHT3X_GetTempAndHumi))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = SHT3X_GetTempAndHumi &rArr; SHT3X_GetTempAndHumiPolling &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>SHT3X_GetTempAndHumiClkStretch</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, sht3x.o(i.SHT3X_GetTempAndHumiClkStretch))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SHT3X_GetTempAndHumiClkStretch &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcHumidity
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumi
</UL>

<P><STRONG><a name="[50]"></a>SHT3X_GetTempAndHumiPolling</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, sht3x.o(i.SHT3X_GetTempAndHumiPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SHT3X_GetTempAndHumiPolling &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcHumidity
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumi
</UL>

<P><STRONG><a name="[53]"></a>SHT3X_HardReset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sht3x.o(i.SHT3X_HardReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SHT3X_HardReset
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>SHT3X_Init</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, sht3x.o(i.SHT3X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SHT3X_Init &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sf_SDA_OUT
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SetI2cAdr
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>SHT3X_ReadMeasurementBuffer</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sht3x.o(i.SHT3X_ReadMeasurementBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SHT3X_ReadMeasurementBuffer &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcTemperature
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcHumidity
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>SHT3X_ReadStatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sht3x.o(i.SHT3X_ReadStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SHT3X_ReadStatus &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>SHT3X_SetAlertLimits</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, sht3x.o(i.SHT3X_SetAlertLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SHT3X_SetAlertLimits &rArr; SHT3X_WriteAlertLimitData &rArr; SHT3X_Write2BytesAndCrc &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteAlertLimitData
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>SHT3X_SetI2cAdr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sht3x.o(i.SHT3X_SetI2cAdr))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
</UL>

<P><STRONG><a name="[5c]"></a>SHT3X_SoftReset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sht3x.o(i.SHT3X_SoftReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SHT3X_SoftReset &rArr; SHT3X_WriteCommand &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>SHT3X_StartPeriodicMeasurment</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, sht3x.o(i.SHT3X_StartPeriodicMeasurment))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SHT3X_StartPeriodicMeasurment &rArr; SHT3X_WriteCommand &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>SHT3x_ReadSerialNumber</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, sht3x.o(i.SHT3x_ReadSerialNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SHT3x_ReadSerialNumber &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteCommand
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StopAccess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartWriteAccess
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartReadAccess
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>Sf_SDA_IN</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sht3x.o(i.Sf_SDA_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Sf_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
</UL>

<P><STRONG><a name="[3c]"></a>Sf_SDA_OUT</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, sht3x.o(i.Sf_SDA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StopCondition
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StartCondition
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
</UL>

<P><STRONG><a name="[3b]"></a>Sf_SDA_READ</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sht3x.o(i.Sf_SDA_READ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Sf_SDA_READ
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SystemInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, system_hk32f030m.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToHSI_32M
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[66]"></a>USART_Config</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, bsp_usart.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USART_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>USART_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32f030m_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[69]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, hk32f030m_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[71]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hk32f030m_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[6b]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[82]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[73]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[84]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[35]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[5e]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sht3x.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartPeriodicMeasurment
</UL>

<P><STRONG><a name="[85]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[86]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[87]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1e]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[1b]"></a>main</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = main &rArr; SHT3X_GetTempAndHumi &rArr; SHT3X_GetTempAndHumiPolling &rArr; SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3x_ReadSerialNumber
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartPeriodicMeasurment
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SoftReset
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SetAlertLimits
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_HardReset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumi
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ClearAllAlertFlags
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMicroSeconds
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>SHT3X_CalcCrc</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sht3x.o(i.SHT3X_CalcCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SHT3X_CalcCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Write2BytesAndCrc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CheckCrc
</UL>

<P><STRONG><a name="[42]"></a>SHT3X_CalcHumidity</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, sht3x.o(i.SHT3X_CalcHumidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SHT3X_CalcHumidity &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
</UL>

<P><STRONG><a name="[44]"></a>SHT3X_CalcRawHumidity</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sht3x.o(i.SHT3X_CalcRawHumidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SHT3X_CalcRawHumidity &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteAlertLimitData
</UL>

<P><STRONG><a name="[46]"></a>SHT3X_CalcRawTemperature</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, sht3x.o(i.SHT3X_CalcRawTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SHT3X_CalcRawTemperature &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteAlertLimitData
</UL>

<P><STRONG><a name="[47]"></a>SHT3X_CalcTemperature</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, sht3x.o(i.SHT3X_CalcTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SHT3X_CalcTemperature &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
</UL>

<P><STRONG><a name="[48]"></a>SHT3X_CheckCrc</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, sht3x.o(i.SHT3X_CheckCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SHT3X_CheckCrc &rArr; SHT3X_CalcCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Read2BytesAndCrc
</UL>

<P><STRONG><a name="[52]"></a>SHT3X_Read2BytesAndCrc</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, sht3x.o(i.SHT3X_Read2BytesAndCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SHT3X_Read2BytesAndCrc &rArr; I2c_ReadByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_ReadByte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CheckCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3x_ReadSerialNumber
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
</UL>

<P><STRONG><a name="[51]"></a>SHT3X_StartReadAccess</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sht3x.o(i.SHT3X_StartReadAccess))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SHT3X_StartReadAccess &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StartCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3x_ReadSerialNumber
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
</UL>

<P><STRONG><a name="[4b]"></a>SHT3X_StartWriteAccess</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sht3x.o(i.SHT3X_StartWriteAccess))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SHT3X_StartWriteAccess &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StartCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3x_ReadSerialNumber
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartPeriodicMeasurment
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SoftReset
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SetAlertLimits
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ClearAllAlertFlags
</UL>

<P><STRONG><a name="[4d]"></a>SHT3X_StopAccess</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sht3x.o(i.SHT3X_StopAccess))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SHT3X_StopAccess &rArr; I2c_StopCondition &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_StopCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3x_ReadSerialNumber
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartPeriodicMeasurment
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SoftReset
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SetAlertLimits
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ClearAllAlertFlags
</UL>

<P><STRONG><a name="[5f]"></a>SHT3X_Write2BytesAndCrc</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, sht3x.o(i.SHT3X_Write2BytesAndCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SHT3X_Write2BytesAndCrc &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_WriteAlertLimitData
</UL>

<P><STRONG><a name="[5b]"></a>SHT3X_WriteAlertLimitData</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, sht3x.o(i.SHT3X_WriteAlertLimitData))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SHT3X_WriteAlertLimitData &rArr; SHT3X_Write2BytesAndCrc &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_Write2BytesAndCrc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawTemperature
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_CalcRawHumidity
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SetAlertLimits
</UL>

<P><STRONG><a name="[4c]"></a>SHT3X_WriteCommand</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, sht3x.o(i.SHT3X_WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SHT3X_WriteCommand &rArr; I2c_WriteByte &rArr; Sf_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiPolling
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_GetTempAndHumiClkStretch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3x_ReadSerialNumber
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_StartPeriodicMeasurment
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SoftReset
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_SetAlertLimits
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ReadMeasurementBuffer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT3X_ClearAllAlertFlags
</UL>

<P><STRONG><a name="[63]"></a>SetSysClock</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, system_hk32f030m.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SetSysClock &rArr; SetSysClockToHSI_32M
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI_32M
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[64]"></a>SetSysClockToHSI_32M</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, system_hk32f030m.o(i.SetSysClockToHSI_32M))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClockToHSI_32M
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[6d]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[70]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6f]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
